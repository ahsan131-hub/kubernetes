apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld
  namespace: helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloworld
  template:
    metadata:
      labels:
        app: helloworld
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld
  namespace: helloworld
spec:
  selector:
    app: helloworld
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: helloworld-ingress
#   namespace: helloworld
#   annotations:
#     external-dns.alpha.kubernetes.io/target: microk8s-metal.civilfleet.org
#     kubernetes.io/ingress.class: traefik
#     # traefik.ingress.kubernetes.io/router.tls.certresolver: le
# spec:
#   rules:
#     - host: "helloworld.civilfleet.org"
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: helloworld
#                 port:
#                   number: 80
#   tls:
#     - certResolver: le

---
apiVersion: networking.k8s.io/v1
kind: IngressRoute
metadata:
  name: helloworld
  annotations:
    external-dns.alpha.kubernetes.io/target: microk8s-metal.civilfleet.org
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`helloworld.civilfleet.org`)
      kind: Rule
      services:
        - name: helloworld
          port: 8080
  tls:
    certResolver: le
